name: BuildAndDeployDevBranch

on:
  push:
    branches-ignore:
      - 'master'
jobs:
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
      deployments: 'write'
    strategy:
        matrix:
          node-version:
            - '16.x'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v3
      with:
        path: "**/node_modules"
        key: ${{ runner.os }}-${{ matrix.node-version }}-node_modules-${{ hashFiles('**/package-lock.json') }}
    - run: npm install
    - name: Typecheck with TypeScript
      run: npm run typecheck
    - name: Build client bundles
      run: node ./node_modules/neuroglancer/config/esbuild-cli.js --config=min --no-typecheck --define CONFIG=$(cat config/ng-extend.json | tr -d ' \t\n\r') --define STATE_SERVERS=$(cat config/state_servers.json | tr -d " \t\n\r") --define CUSTOM_BINDINGS=$(cat config/custom-keybinds.json | tr -d " \t\n\r") --define DATASETS=$(cat config/datastack-dataset.json | tr -d " \t\n\r")
    - run: cp -r ./dist/min appengine/frontend/static/
    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
    - run: echo "BRANCH_NAME_URL=$(echo ${{ env.BRANCH_NAME }} | tr / - | tr _ -)" >> $GITHUB_ENV
    - name: start deployment
      uses: bobheadxi/deployments@v1
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: ${{ env.BRANCH_NAME }}
        desc: Setting up staging deployment for ${{ env.BRANCH_NAME }}
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/483670036293/locations/global/workloadIdentityPools/neuroglancer-github/providers/github'
        service_account: 'chris-apps-deploy@seung-lab.iam.gserviceaccount.com'
    - id: deploy
      uses: google-github-actions/deploy-appengine@main
      with:
        version: ${{ env.BRANCH_NAME_URL }}
        deliverables: appengine/frontend/app.yaml
        promote: false
    - name: update deployment status
      uses: bobheadxi/deployments@v1
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        env: ${{ steps.deployment.outputs.env }}
        env_url: ${{ steps.deploy.outputs.url }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}